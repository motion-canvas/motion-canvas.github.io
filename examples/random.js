import{R as u,u as l,M as f,m as j,j as m,r as g,h,i as k,l as w,s as y,a as x,V as P,b as R,f as v,P as i}from"./makeScene2D.bd0c5a73.js";import{m as D}from"./createRef.f9eb3d88.js";function S(s,r=!0){return typeof s=="number"?new u(r?s:s+l().meta.getData().seed):l().random}let n;n!=null||(n=new f("random",!1,{version:0}));n.loadData({version:0});const d=n;let o;o!=null||(o=new f("random",!1,{version:1,seed:1456280284}));o.loadData({version:1,seed:1456280284});const V=o,a=j(function*(s){const r=S(),c=[];s.add(m(k,{layout:!0,gap:10,alignItems:"center",children:g(40).map(t=>m(h,{ref:D(c,t),radius:5,width:10,height:10,fill:"#e13238"}))})),yield*w(3,()=>y(.04,...c.map(t=>x(t.size.y(r.nextInt(100,200),.5).to(10,.5),t.fill("#e6a700",.5).to("#e13238",.5)))))});a.name="random";a.meta=V;var p;(p=a.onReplaced)!=null||(a.onReplaced=new P(a.config));const e=R({scenes:[a],size:new v(960,540)}),I=()=>e instanceof i?(e.meta=d,e.name="random",e.logger.warn({message:"A project instance was exported instead of a project factory.",remarks:`<p>Use the <code>makeProject()</code> function instead:</p>
<pre><code class="language-ts"><span class="hljs-keyword">import</span> {makeProject} <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@motion-canvas/core&#x27;</span>;
<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-title function_">makeProject</span>({
  <span class="hljs-comment">// Configuration and scenes go here.</span>
});
</code></pre>
`,stack:e.creationStack}),e):new i("random",d,e);export{I as default};
