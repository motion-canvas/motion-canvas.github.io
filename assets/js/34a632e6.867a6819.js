"use strict";(self.webpackChunk_motion_canvas_docs=self.webpackChunk_motion_canvas_docs||[]).push([[9528],{876:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>g});var r=n(2784);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=r.createContext({}),c=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},s=function(e){var t=c(e.components);return r.createElement(p.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,p=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),u=c(n),d=a,g=u["".concat(p,".").concat(d)]||u[d]||m[d]||i;return n?r.createElement(g,o(o({ref:t},s),{},{components:n})):r.createElement(g,o({ref:t},s))}));function g(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=d;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l[u]="string"==typeof e?e:a,o[1]=l;for(var c=2;c<i;c++)o[c]=n[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},8334:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>o,default:()=>m,frontMatter:()=>i,metadata:()=>l,toc:()=>c});var r=n(7896),a=(n(2784),n(876));const i={slug:"/plugins/runtime",description:"Extend the runtime components like scenes and the player.",sidebar_position:1},o="Runtime",l={unversionedId:"advanced/plugins/runtime",id:"advanced/plugins/runtime",title:"Runtime",description:"Extend the runtime components like scenes and the player.",source:"@site/docs/advanced/plugins/runtime.mdx",sourceDirName:"advanced/plugins",slug:"/plugins/runtime",permalink:"/docs/plugins/runtime",draft:!1,editUrl:"https://github.com/motion-canvas/motion-canvas/blob/main/packages/docs/docs/advanced/plugins/runtime.mdx",tags:[],version:"current",lastUpdatedBy:"Jacob",sidebarPosition:1,frontMatter:{slug:"/plugins/runtime",description:"Extend the runtime components like scenes and the player.",sidebar_position:1},sidebar:"docs",previous:{title:"Authoring plugins",permalink:"/docs/plugins"},next:{title:"Editor",permalink:"/docs/plugins/editor"}},p={},c=[],s={toc:c},u="wrapper";function m(e){let{components:t,...n}=e;return(0,a.kt)(u,(0,r.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"runtime"},"Runtime"),(0,a.kt)("div",{className:"row margin-bottom--md"},(0,a.kt)("div",{className:"col col--6"},(0,a.kt)("p",null,"Runtime plugins allow you to extend the runtime components like scenes and the\nplayer."),(0,a.kt)("p",null,"Let's start by creating the entry point - a simple file that exports our plugin.\nFor now, we'll put that file in the ",(0,a.kt)("inlineCode",{parentName:"p"},"src")," directory of our Motion Canvas\nproject. If you find yourself reusing the plugin across multiple projects, you\ncan put it in a separate package."),(0,a.kt)("p",null,"To define the plugin, we pass a configuration object to the\n",(0,a.kt)("a",{parentName:"p",href:"/api/core/plugin#makePlugin"},(0,a.kt)("inlineCode",{parentName:"a"},"makePlugin"))," helper function and export the result. ",(0,a.kt)("inlineCode",{parentName:"p"},"name")," is the\nonly required property. ",(0,a.kt)("inlineCode",{parentName:"p"},"player")," is an optional hook that will receive the\n",(0,a.kt)("a",{parentName:"p",href:"/api/core/app/Player"},(0,a.kt)("inlineCode",{parentName:"a"},"Player"))," instance right after it's created. Take a look\nat the ",(0,a.kt)("a",{parentName:"p",href:"/api/core/plugin/Plugin"},(0,a.kt)("inlineCode",{parentName:"a"},"Plugin"))," interface for the full list of\navailable hooks.")),(0,a.kt)("div",{className:"col col--6"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-diff",metastring:'title="Project structure"',title:'"Project','structure"':!0},"  project/\n  \u251c\u2500\u2500 src/\n  \u2502   \u251c\u2500\u2500 scenes/\n  \u2502   \u2502   \u2514\u2500\u2500 example.tsx\n// highlight-next-line\n+ \u2502   \u251c\u2500\u2500 plugin.ts\n  \u2502   \u2514\u2500\u2500 project.ts\n  \u251c\u2500\u2500 package.json\n  \u251c\u2500\u2500 tsconfig.json\n  \u2514\u2500\u2500 vite.config.ts\n")))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="src/plugin.ts"',title:'"src/plugin.ts"'},"import {makePlugin} from '@motion-canvas/core';\n\nexport default makePlugin({\n  name: 'motion-canvas-plugin-example',\n  player(player) {\n    player.onRecalculated.subscribe(() => {\n      player.requestReset();\n      player.togglePlayback(true);\n    });\n  },\n});\n")),(0,a.kt)("p",null,"In this example we subscribe to the\n",(0,a.kt)("a",{parentName:"p",href:"/api/core/app/Player#onRecalculated"},(0,a.kt)("inlineCode",{parentName:"a"},"onRecalculated"))," event to play the\nanimation from the beginning whenever this event occurs. Recalculation happens\nwhen we edit the animation either in the editor or in the code."),(0,a.kt)("p",null,"Now we can import the plugin in our project file. Note that\n",(0,a.kt)("a",{parentName:"p",href:"/api/core/plugin#makePlugin"},(0,a.kt)("inlineCode",{parentName:"a"},"makePlugin"))," returns a function that we need to call to create an\nactual plugin object (This can come in handy when\n",(0,a.kt)("a",{parentName:"p",href:"/docs/plugins/node#passing-options-to-runtime"},"developing a Node.js plugin"),"):"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="src/project.ts"',title:'"src/project.ts"'},"import {makeProject} from '@motion-canvas/core';\n// highlight-next-line\nimport myPlugin from './plugin';\nimport example from './scenes/example?scene';\n\nexport default makeProject({\n  scenes: [example],\n  // highlight-start\n  plugins: [myPlugin()],\n  //                ^^ we need to call the function\n  // highlight-end\n});\n")),(0,a.kt)("p",null,"That's it! Now we can run the project and see our plugin in action. Check out\nthe ",(0,a.kt)("a",{parentName:"p",href:"/api/core/plugin/Plugin"},(0,a.kt)("inlineCode",{parentName:"a"},"Plugin"))," interface for the full list of available hooks."))}m.isMDXComponent=!0}}]);