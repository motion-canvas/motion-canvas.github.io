(self.webpackChunk_motion_canvas_docs=self.webpackChunk_motion_canvas_docs||[]).push([[7815],{1532:e=>{function n(e){var n=new Error("Cannot find module '"+e+"'");throw n.code="MODULE_NOT_FOUND",n}n.keys=()=>[],n.resolve=n,n.id=1532,e.exports=n},9573:(e,n,t)=>{"use strict";t.d(n,{Z:()=>o});var a=t(2784);function o(){return a.createElement("svg",{width:24,height:24,viewBox:"0 0 24 24",fill:"currentColor"},a.createElement("path",{d:"M21 19V5c0-1.1-.9-2-2-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2zM8.5 13.5l2.5 3.01L14.5 12l4.5 6H5l3.5-4.5z"}))}},700:(e,n,t)=>{"use strict";t.d(n,{Z:()=>o});var a=t(2784);function o(){return a.createElement("svg",{width:24,height:24,viewBox:"0 0 24 24",fill:"currentColor"},a.createElement("path",{d:"M3 15h8v-2H3v2zm0 4h8v-2H3v2zm0-8h8V9H3v2zm0-6v2h8V5H3zm10 0h8v14h-8V5z"}))}},8015:(e,n,t)=>{"use strict";t.d(n,{Z:()=>o});var a=t(2784);function o(){return a.createElement("svg",{width:24,height:24,viewBox:"0 0 24 24",fill:"currentColor"},a.createElement("path",{d:"M4 15h16v-2H4v2zm0 4h16v-2H4v2zm0-8h16V9H4v2zm0-6v2h16V5H4z"}))}},4974:(e,n,t)=>{"use strict";t.d(n,{Z:()=>oe});var a=t(3947),o=t(5448),i=t(7120),r=t(1727),l=t(5565),s=t(1263),c=t(3181),d=t(9573),m=t(2784);function u(){return m.createElement("svg",{width:24,height:24,viewBox:"0 0 24 24",fill:"currentColor"},m.createElement("path",{d:"M6 19h4V5H6v14zm8-14v14h4V5h-4z"}))}function f(){return m.createElement("svg",{width:24,height:24,viewBox:"0 0 24 24",fill:"currentColor"},m.createElement("path",{d:"M8 5v14l11-7z"}))}function p(){return m.createElement("svg",{width:24,height:24,viewBox:"0 0 24 24",fill:"currentColor"},m.createElement("path",{d:"M6 18l8.5-6L6 6v12zM16 6v12h2V6h-2z"}))}function h(){return m.createElement("svg",{width:24,height:24,viewBox:"0 0 24 24",fill:"currentColor"},m.createElement("path",{d:"M6 6h2v12H6zm3.5 6l8.5 6V6z"}))}var v=t(700),g=t(8015),y=t(6277);function k(e){let{options:n,value:t,className:a,onChange:o}=e;const i=(0,m.useRef)(),r=(0,m.useRef)(),[l,s]=(0,m.useState)(!1);return(0,m.useEffect)((()=>{const e=e=>{i.current&&!i.current.contains(e.target)&&s(!1)};return document.addEventListener("mousedown",e),document.addEventListener("touchstart",e),()=>{document.removeEventListener("mousedown",e),document.removeEventListener("touchstart",e)}}),[i]),m.createElement("div",{ref:i,className:(0,y.Z)("dropdown dropdown--right",l&&"dropdown--show",a)},m.createElement("a",{ref:r,className:"navbar__link",href:"#",onClick:e=>{e.preventDefault(),s(!l)}},n.find((e=>e.value===t))?.name??t),m.createElement("ul",{className:"dropdown__menu"},n.map(((e,a)=>m.createElement("li",{key:e.value},m.createElement("a",{href:"#",className:(0,y.Z)("dropdown__link",t===e.value&&"dropdown__link--active"),onClick:n=>{n.preventDefault(),o(e.value),s(!1),r.current.focus()},onKeyDown:e=>{a!==n.length-1||"Tab"!==e.key||e.shiftKey||(e.preventDefault(),s(!1),r.current.focus())}},e.name))))))}var w=t(6784);const b=new Map,N=new Map,R=s.Z.canUseDOM?new IntersectionObserver((e=>{for(const o of e){const e=o.target;o.isIntersecting?b.set(e,o.intersectionRatio):b.delete(e)}const n=b.get(E);if(void 0!==n&&n>.75)return;let t=0,a=null;for(const o of N.values()){const e=b.get(o.parent);void 0!==e&&e>t&&(t=e,a=o)}a&&(void 0===n||t>n)&&V(a.setter,a.parent,a.ratio,a.onError).then(a.onBorrow)}),{threshold:[0,.25,.5,.75,1]}):null;let x=null,S=null,C=null,I=null,L=null,E=null,z=1,M=null;async function V(e,n,t,a){if(e!==L){if(I&&E&&I.finalBuffer.parentElement===E&&E?.removeChild(I.finalBuffer),L?.(null),L=e,E=n,M=a,!x){const{Logger:e,Player:n,ProjectMetadata:t,Stage:a,ValueDispatcher:o,DefaultPlugin:i}=await import("@motion-canvas/core"),{makeScene2D:r,Code:l,LezerHighlighter:s}=await import("@motion-canvas/2d");l.defaultHighlighter=new s(w.E.configure({dialect:"jsx ts"})),S=r((function*(){yield})),S.onReplaced=new o(S),x={name:"fiddle",logger:new e,plugins:[i()],scenes:[S],experimentalFeatures:!0},x.meta=new t(x),x.meta.shared.size.set(960),C=new n(x,{size:x.meta.shared.size.get()}),I=new a,I.configure({size:x.meta.shared.size.get()}),C.onRender.subscribe((async()=>{await I.render(C.playback.currentScene,C.playback.previousScene)})),C.onRecalculated.subscribe((()=>{I.finalBuffer.parentElement!==E&&(E?.append(I.finalBuffer),L(C))})),x.logger.onLogged.subscribe((e=>{"error"===e.level&&M?.(`Runtime error: ${e.message}`)}))}return z!==t&&(x.meta.shared.size.set([960,Math.floor(960/t)]),S.onReplaced.current={...S.onReplaced.current,size:x.meta.shared.size.get()},I.configure({size:x.meta.shared.size.get()}),z=t),C.activate(),C.requestReset(),C}}const D=[];function _(e){Object.entries(e).forEach((e=>{let[n,t]=e;var a;D.push({label:n,type:"function"==typeof t?(a=t,a.prototype&&a.prototype.constructor.name?"class":"function"):"variable"})}))}s.Z.canUseDOM&&(import("@motion-canvas/core").then(_).catch(),import("@motion-canvas/2d").then(_).catch());const T=r.Py.define(),P=r.Py.define({map:(e,n)=>{let{from:t,to:a,tooltip:o}=e;return{from:n.mapPos(t),to:n.mapPos(a),tooltip:o}}}),F=l.p.mark({class:"cm-underline"}),O=l.tk.baseTheme({".cm-underline":{textDecoration:"var(--ifm-color-danger-dark) wavy underline"}}),B=r.QQ.define({create:()=>l.p.none,update:(e,n)=>{e=e.map(n.changes);for(const t of n.effects){if(t.is(T)){e=e.update({filter:()=>!1});break}t.is(P)&&(e=e.update({add:[F.range(t.value.from,t.value.to)]}))}return e},provide:e=>l.tk.decorations.from(e)});class J extends r.uU{constructor(e){super(),this.tooltip=e}}const H=r.QQ.define({create:()=>r.Xs.empty,update:(e,n)=>{e=e.map(n.changes);for(const t of n.effects){if(t.is(T)){e=e.update({filter:()=>!1});break}t.is(P)&&(e=e.update({add:[new J(t.value.tooltip).range(t.value.from,t.value.to)]}))}return e},provide:e=>(0,l.bF)(((n,t)=>{let a;return n.state.field(e,!1).between(t,t,((e,n,t)=>(a={pos:e,end:n,create:()=>{const e=document.createElement("div");return e.textContent=t.tooltip,{dom:e}}},!1))),a}))});function Z(e,n,t){const a=n.map((n=>(n.from===n.to&&(n=function(e,n){const t=(0,i.qz)(e).resolveInner(n,1);return{from:t.from,to:t.to}}(e.state,n.from)),P.of({tooltip:t,...n}))));return e.dispatch({effects:a}),!0}const G=7;function U(e,n){let t=(0,i.qz)(e).topNode.firstChild,a=null;for(;t;){if(t.type.is("ImportDeclaration")){a=t;break}t=t.nextSibling}if(!a)return null;if(n){const t=e.doc.lineAt(a.from);if(t.from>n.to||t.to<n.from)return null}let o=a;for(;o;){const e=o.nextSibling;if(!e.type.is("ImportDeclaration"))break;o=e}return{from:a.from+G,to:o.to}}function q(e){const{state:n}=e,t=U(n);t&&e.dispatch({effects:[i.SW.of(t)]})}const A=/ *\/\/ ?(\S+) ?(.*)/,W=["highlight-next-line","highlight-start","highlight-end","prettier-ignore"];var j=t(6253);const Q=i.Qf.define([{tag:j.pJ.comment,color:"var(--hl-comment)"},{tag:j.pJ.docComment,color:"var(--hl-comment)"},{tag:j.pJ.blockComment,color:"var(--hl-comment)"},{tag:j.pJ.keyword,color:"var(--hl-keyword)"},{tag:j.pJ.number,color:"var(--hl-number)"},{tag:j.pJ.inserted,color:"var(--hl-number)"},{tag:j.pJ.constant(j.pJ.propertyName),color:"var(--hl-constant)"},{tag:j.pJ.attributeName,color:"var(--hl-variable)"},{tag:j.pJ.variableName,color:"var(--hl-variable)"},{tag:j.pJ.propertyName,color:"var(--hl-variable)"},{tag:j.pJ.deleted,color:"var(--hl-string)"},{tag:j.pJ.string,color:"var(--hl-string)"},{tag:j.pJ.attributeValue,color:"var(--hl-string)"},{tag:j.pJ.tagName,color:"var(--hl-tag)"},{tag:j.pJ.typeName,color:"var(--hl-tag)"},{tag:j.pJ.punctuation,color:"var(--hl-punctuation)"},{tag:j.pJ.operator,color:"var(--hl-punctuation)"},{tag:j.pJ.function(j.pJ.variableName),color:"var(--hl-function)"},{tag:j.pJ.function(j.pJ.propertyName),color:"var(--hl-function)"},{tag:j.pJ.className,color:"var(--hl-class)"},{tag:j.pJ.character,color:"var(--hl-char)"}]),X=l.tk.theme({"&":{fontSize:"var(--ifm-code-font-size)",lineHeight:"21.04px",fontFamily:"var(--ifm-font-family-monospace)",color:"var(--hl-color)",backgroundColor:"var(--hl-background)"},"&.cm-focused .cm-cursor":{borderLeftColor:"var(--hl-color)"},"&.cm-focused":{outline:"none"},".cm-gutters":{backgroundColor:"var(--hl-background)",color:"var(--ifm-color-secondary-darkest)",borderRight:"1px solid var(--ifm-background-color)"},"& .cm-lineNumbers .cm-gutterElement":{paddingLeft:"var(--ifm-pre-padding)"},".cm-activeLineGutter":{backgroundColor:"var(--ifm-code-active-color)"},".cm-scroller":{fontFamily:"var(--ifm-font-family-monospace)",lineHeight:"var(--ifm-pre-line-height)",paddingTop:"var(--ifm-pre-padding)",paddingBottom:"var(--ifm-pre-padding)"},".cm-content":{padding:"0"},"& .cm-line":{paddingRight:"var(--ifm-pre-padding)"},"& .cm-selectionBackground, &.cm-focused .cm-selectionBackground, ::selection":{backgroundColor:"var(--ifm-code-selection-color)"},".cm-activeLine":{backgroundColor:"var(--ifm-code-active-color)"},".cm-selectionMatch":{backgroundColor:"var(--ifm-code-selection-color)"},".cm-foldPlaceholder":{backgroundColor:"var(--ifm-code-selection-color)",borderColor:"var(--ifm-color-emphasis-300)"},".cm-tooltip":{backgroundColor:"var(--ifm-background-surface-color)"}});var $=t(7243);class K extends Error{constructor(e,n){super(e),this.errors=n}}function Y(e,n){const t=`${n}.tsx`,a=new Set,o=[];let i,r=null;try{i=$.transform(e,{filename:t,presets:["typescript",["react",{runtime:"automatic",importSource:"@motion-canvas/2d"}]],plugins:[e=>{let{types:n}=e;return{visitor:{ImportDeclaration(e){e.node.source.value.startsWith("@motion-canvas/core")&&(e.node.source.value="@motion-canvas/core"),e.node.source.value.startsWith("@motion-canvas/2d")&&(e.node.source.value="@motion-canvas/2d")},ReferencedIdentifier(e){const{node:t,scope:i}=e;n.isIdentifier(t)&&!i.hasBinding(t.name)&&(a.add(t.name),o.push({from:t.start,to:t.end,tooltip:`Cannot find name '${t.name}'.`}))}}}}]})}catch(l){const e=/(.*) \(\d+:\d+\)/.exec(l.message.slice(t.length+1));r=e?e[1]:l.message,l.loc&&o.push({from:l.pos,to:l.pos,tooltip:r})}if(o.length>0)throw new K(r??`Cannot find names: ${Array.from(a).join(", ")}\nDid you forget to import them?`,o);return i.code}function ee(e){const[n,t]=(0,m.useState)(e?.current);return(0,m.useEffect)((()=>e&&e.subscribe(t)),[e]),n}var ne=t(6109),te=t(8888);const ae={root:"root_icgl",layoutControl:"layoutControl_X__N",icon:"icon_brRG",active:"active_qxTr",progress:"progress_HsLC",controls:"controls_R4ai",previewOnly:"previewOnly_FFUw",section:"section_UscS",disabled:"disabled_egkt",error:"error_N64d",editor:"editor_xQGp",source:"source_Dq6N",preview:"preview_C9cZ",button:"button_ESGX",picker:"picker_Whdf",codeOnly:"codeOnly_lee0"};function oe(e){let{children:n,className:t,mode:w="editor",ratio:b="4"}=e;const[z,M]=(0,m.useState)(null),_=(0,m.useRef)(null),P=(0,m.useRef)(),F=(0,m.useRef)(),[J,G]=(0,m.useState)(w),{pathname:j}=(0,c.TH)(),[$,oe]=(0,m.useState)(null),ie=ee(z?.onDurationChanged),re=ee(z?.onFrameChanged),le=ee(z?.onStateChanged),[se,ce]=(0,m.useState)(null),[de,me]=(0,m.useState)(null),ue=(0,m.useMemo)((()=>{if(b.includes("/")){const e=b.split("/"),n=parseFloat(e[0])/parseFloat(e[1]);if(!isNaN(n))return n}const e=parseFloat(b);return isNaN(e)?4:e}),[b]),fe=async function(e,n){void 0===n&&(n=!0),await V(M,F.current,ue,oe);try{const o=await async function(e,n){const t=Y(e,n);return(await import(URL.createObjectURL(new Blob([t],{type:"text/javascript"})))).default}(e.sliceString(0),j);return a=o,S&&(S.onReplaced.current=a),me(e),n&&!de?.eq(e)&&F.current.animate((void 0===t&&(t=4),[{boxShadow:"0 0 0px 0 #ccc inset",easing:"cubic-bezier(0.33, 1, 0.68, 1)"},{boxShadow:`0 0 0px ${t}px #ccc inset`,easing:"cubic-bezier(0.32, 0, 0.67, 0)"},{boxShadow:"0 0 0px 0 #ccc inset"}]),{duration:300}),!0}catch(o){return o instanceof K&&Z(_.current,o.errors,o.message),oe(o.message),z?.togglePlayback(!1),!1}var t,a},pe=async e=>{ve(e);const n=function(e){const n=U(e);let t=!1;return e.field(i.iQ,!1).between(n.from,n.to,(()=>(t=!0,!1))),t}(_.current.state);_.current.setState(ge[e].state),await fe(ge[e].state.doc),n&&q(_.current)},[he,ve]=(0,m.useState)(0),ge=(0,m.useMemo)((()=>function(e){let n={name:"Default",lines:[]};const t=[n];for(const a of e.split("\n")){const e=A.exec(a);if(!e){n.lines.push(a);continue}const[,o,i]=e;W.includes(o)||("snippet"===o?n.lines.length>0?(n={name:i,lines:[]},t.push(n)):n.name=i:n.lines.push(a))}return t}(n).map((e=>({name:e.name,state:r.yy.create({doc:r.xv.of(e.lines),extensions:[te.Xy,l.$f.of([a.oc,{key:"Mod-s",preventDefault:!0,run:e=>(fe(e.state.doc),!0)}]),l.tk.updateListener.of((e=>{ce(e.state.doc),e.docChanged&&(oe(null),_.current.dispatch({effects:[T.of(null)]}))})),o.Lz.data.of({autocomplete:e=>{if("String"===(0,i.qz)(e.state).resolveInner(e.pos,-1).name)return;const n=e.matchBefore(/\w*/);return n.from!==n.to||e.explicit?{from:n.from,options:D}:null}}),i.rs.of(((e,n,t)=>U(e,{from:n,to:t}))),[B,H,O],(0,o.eJ)({jsx:!0,typescript:!0}),(0,i.nF)(Q),X]})})))),[n]);s.Z.canUseDOM||ge.forEach((e=>{Y(e.state.doc.sliceString(0),j)})),(0,m.useEffect)((()=>(_.current=new l.tk({parent:P.current,state:ge[he].state}),q(_.current),function(e,n,t,a,o){N.has(e)||(R?.observe(n),N.set(e,{setter:e,parent:n,ratio:t,onError:a,onBorrow:o}))}(M,F.current,ue,oe,(async e=>{await fe(ge[he].state.doc,!1)&&"code"!==J&&e.togglePlayback(!0)})),()=>{!function(e){const n=N.get(e);n&&(R?.unobserve(n.parent),N.delete(e)),L===e&&x&&(C.deactivate(),L=null,E=null,I.finalBuffer.remove())}(M),_.current.destroy()})),[]);const ye=(0,m.useMemo)((()=>{const e=ge[0].state,n=U(e);let t=e.doc;return n&&(t=t.replace(n.from,n.to,r.xv.of(["..."]))),t.toString()+"\n"}),[ge]),ke=de&&se&&!se.eq(de),we=se&&!se.eq(ge[he].state.doc)||ke;return m.createElement("div",{className:(0,y.Z)(ae.root,t,{[ae.codeOnly]:"code"===J,[ae.previewOnly]:"preview"===J})},m.createElement("div",{className:ae.layoutControl},m.createElement("button",{className:(0,y.Z)(ae.icon,"code"===J&&ae.active),onClick:()=>{G("code"),z?.togglePlayback(!1)},title:"Source code"},m.createElement(g.Z,null)),m.createElement("button",{className:(0,y.Z)(ae.icon,"editor"===J&&ae.active),onClick:()=>G("editor"),title:"Editor with preview"},m.createElement(v.Z,null)),m.createElement("button",{className:(0,y.Z)(ae.icon,"preview"===J&&ae.active),onClick:()=>G("preview"),title:"Preview"},m.createElement(d.Z,null))),m.createElement("div",{className:ae.preview,style:{aspectRatio:b},ref:F},!z&&m.createElement("div",null,"Press play to preview the animation")),ie>0&&m.createElement("div",{className:ae.progress,style:{width:z?re/ie*100+"%":0}}),m.createElement("div",{className:ae.controls},m.createElement("div",{className:ae.section},ke&&m.createElement("button",{onClick:()=>fe(_.current.state.doc),className:ae.button},m.createElement("kbd",null,"CTRL"),m.createElement("kbd",null,"S"),m.createElement("small",null,"Update preview"))),m.createElement("div",{className:(0,y.Z)(ae.section,0===ie&&z&&ae.disabled)},m.createElement("button",{className:ae.icon,onClick:()=>z?.requestPreviousFrame()},m.createElement(h,null)),m.createElement("button",{className:ae.icon,onClick:async()=>{if(z){let e=!0;de||(e=await fe(_.current.state.doc)),e&&z.togglePlayback()}else{const e=await V(M,F.current,ue,oe);await fe(_.current.state.doc)&&e.togglePlayback(!0)}}},!z||(le?.paused??1)?m.createElement(f,null):m.createElement(u,null)),m.createElement("button",{className:ae.icon,onClick:()=>z?.requestNextFrame()},m.createElement(p,null))),m.createElement("div",{className:ae.section},1===ge.length&&we&&m.createElement("button",{className:ae.button,onClick:()=>pe(0)},m.createElement("small",null,"Reset example")),ge.length>1&&m.createElement(k,{className:ae.picker,value:we?-1:he,onChange:pe,options:ge.map(((e,n)=>({value:n,name:e.name}))).concat(we?{value:-1,name:"Custom"}:[])}))),$&&m.createElement("pre",{className:ae.error},$),m.createElement("div",{className:ae.editor,ref:P},m.createElement(ne.Z,{className:ae.source,language:"tsx"},"code"===J?ge[he].state.doc.toString():ye)))}},6714:(e,n,t)=>{"use strict";t.r(n),t.d(n,{assets:()=>y,contentTitle:()=>v,default:()=>N,frontMatter:()=>h,metadata:()=>g,toc:()=>k});var a=t(7896),o=(t(2784),t(876)),i=t(4974);const r="import {Img, Txt, makeScene2D} from '@motion-canvas/2d';\nimport {all, createRef, createSignal, linear} from '@motion-canvas/core';\n\nexport default makeScene2D(function* (view) {\n  view.fill('#141414');\n\n  const timePassed = createSignal(0);\n  const iconRef = createRef<Img>();\n  const currentEffectText = createSignal('');\n  yield view.add(\n    <>\n      <Img src={'/img/logo_dark.svg'} size={200} x={-200} ref={iconRef} />\n      <Txt\n        fill={'rgba(255, 255, 255, 0.6)'}\n        fontSize={20}\n        x={200}\n        text={() => 'Current Filter: ' + currentEffectText()}\n      />\n    </>,\n  );\n\n  function* filters() {\n    yield currentEffectText('Blur');\n    yield* iconRef().filters.blur(20, 1);\n    yield* iconRef().filters.blur(0, 1);\n    yield currentEffectText('Grayscale');\n    yield* iconRef().filters.grayscale(1, 1);\n    yield* iconRef().filters.grayscale(0, 1);\n    yield currentEffectText('Hue');\n    yield* iconRef().filters.hue(360, 2);\n    yield currentEffectText('Contrast');\n    yield* iconRef().filters.contrast(0, 1);\n    yield* iconRef().filters.contrast(1, 1);\n  }\n\n  yield* all(timePassed(4, 2 * 4, linear), filters());\n});\n",l="import {\n  Circle,\n  Grid,\n  Layout,\n  Rect,\n  Txt,\n  contrast,\n  makeScene2D,\n  saturate,\n} from '@motion-canvas/2d';\nimport {createSignal, linear, map, waitFor} from '@motion-canvas/core';\n\nexport default makeScene2D(function* (view) {\n  view.fontFamily('monospace').fontSize(20).fill('#141414');\n  view.add(<Rect size={5000} fill={'#111'} />);\n\n  const t = createSignal(0);\n  const saturateValue = createSignal(1);\n  const contrastValue = createSignal(1);\n\n  view.add(\n    // Left Segment\n    <Layout x={-300} direction={'column'} alignItems={'center'} gap={20} layout>\n      <Circle\n        size={150}\n        fill={'#99c47a'}\n        filters={[saturate(saturateValue), contrast(contrastValue)]}\n      />\n      <Layout direction={'row'} gap={20}>\n        <Txt fill={'#ffa'}>saturation</Txt>\n        <Txt fill={'#aff'}>constrast</Txt>\n      </Layout>\n    </Layout>,\n  );\n\n  // Right Segment\n  yield view.add(\n    <Layout x={300} direction={'column'} alignItems={'center'} gap={20} layout>\n      <Circle\n        size={150}\n        fill={'#99c47a'}\n        filters={[contrast(contrastValue), saturate(saturateValue)]}\n      />\n      <Layout direction={'row'} gap={20}>\n        <Txt fill={'#aff'}>constrast</Txt>\n        <Txt fill={'#ffa'}>saturation</Txt>\n      </Layout>\n    </Layout>,\n  );\n\n  // Center Segment\n  view.add(\n    <Layout y={-10}>\n      <Grid size={200} stroke={'gray'} lineWidth={1} spacing={40} />\n      <Grid size={200} stroke={'#333'} lineWidth={1} spacing={20} />\n      <Rect size={200} stroke={'gray'} lineWidth={2} />\n      <Txt\n        fill={'white'}\n        text={'saturation'}\n        rotation={-90}\n        x={-115}\n        fill={'#ffa'}\n      />\n      <Txt fill={'white'} text={'contrast'} y={115} fill={'#aff'} />\n      <Txt fill={'white'} text={'1'} position={[-115, 100]} />\n      <Txt fill={'white'} text={'1'} position={[-100, 115]} />\n      <Txt fill={'white'} text={'5'} position={[-115, -90]} />\n      <Txt fill={'white'} text={'5'} position={[100, 115]} />\n      <Circle\n        x={() => map(-150, -100, contrastValue())}\n        y={() => map(150, 100, saturateValue())}\n        fill={'white'}\n        size={20}\n      />\n    </Layout>,\n  );\n\n  yield t(2, 8, linear);\n  yield* saturateValue(5, 2);\n  yield* contrastValue(5, 2);\n  yield* waitFor(1);\n  yield* saturateValue(1, 2);\n  yield* contrastValue(1, 2);\n});\n",s="import {\n  Grid,\n  Img,\n  Layout,\n  makeScene2D,\n  Node,\n  Rect,\n  Txt,\n} from '@motion-canvas/2d';\nimport {\n  all,\n  createRef,\n  createSignal,\n  Origin,\n  Vector2,\n  waitFor,\n} from '@motion-canvas/core';\n\nconst ImageSource =\n  'https://images.unsplash.com/photo-1685901088371-f498db7f8c46';\n\nexport default makeScene2D(function* (view) {\n  view.fontSize(20).fill('#141414');\n\n  const valuePosition = createSignal(new Vector2(150, -30));\n  const maskPosition = createSignal(new Vector2(-150, -30));\n\n  const maskLayerRotation = createSignal(0);\n  const valueLayerRotation = createSignal(0);\n\n  const fakeMaskLayerGroup = createRef<Node>();\n  const fakeValueLayerGroup = createRef<Node>();\n\n  // First show fake a Mask Layer. Funnily enough, this also makes use of masking!\n  yield view.add(\n    <Node ref={fakeMaskLayerGroup} opacity={0} cache>\n      <Img\n        src=\"/img/logo_dark.svg\"\n        size={200}\n        position={maskPosition}\n        rotation={maskLayerRotation}\n      />\n      <Grid\n        compositeOperation={'source-in'}\n        stroke={'white'}\n        width={1000}\n        height={400}\n        spacing={5}\n        lineWidth={1}\n      />\n    </Node>,\n  );\n  yield view.add(\n    <Node ref={fakeValueLayerGroup} opacity={0} cache>\n      {/*\n      We do not specifically need to use the Image here, a simple Rectangle would be enough.\n      It is however convenient because we get the correct aspect ratio.\n      */}\n      <Img\n        src={ImageSource}\n        width={360}\n        position={valuePosition}\n        rotation={valueLayerRotation}\n      />\n      <Grid\n        compositeOperation={'source-in'}\n        stroke={'#ff0'}\n        width={1000}\n        rotation={45}\n        height={1000}\n        spacing={5}\n        lineWidth={1}\n      />\n    </Node>,\n  );\n\n  // Legend (Bottom Center)\n  yield view.add(\n    <Rect\n      fill={'#1a1a1aa0'}\n      layout\n      direction={'row'}\n      gap={20}\n      padding={20}\n      bottom={() => view.getOriginDelta(Origin.Bottom)}\n    >\n      <Layout gap={5} alignItems={'center'}>\n        <Grid\n          stroke={'white'}\n          width={18}\n          height={18}\n          spacing={5}\n          lineWidth={1}\n        />\n        <Txt fill={'white'}>Hidden Stencil / Mask Layer</Txt>\n      </Layout>\n      <Layout gap={5} alignItems={'center'}>\n        <Grid\n          stroke={'#ff0'}\n          rotation={45}\n          width={18}\n          height={18}\n          spacing={5}\n          lineWidth={1}\n        />\n        <Txt fill={'white'}>Hidden Value Layer</Txt>\n      </Layout>\n    </Rect>,\n  );\n  yield* all(\n    fakeMaskLayerGroup().opacity(1, 1),\n    fakeValueLayerGroup().opacity(1, 1),\n  );\n  // Here comes the *actual* value and stencil mask. Because it got added last it will be ontop of the \"fake\" layers.\n  yield view.add(\n    <Node cache>\n      {/** Stencil / Mask Layer. It defines if the Value Layer is visible or not */}\n      <Img\n        src=\"/img/logo_dark.svg\"\n        size={200}\n        position={maskPosition}\n        rotation={maskLayerRotation}\n      />\n      {/** Value Layer. Anything from here will be visible if the Stencil Layer allows for it. */}\n      <Img\n        src={ImageSource}\n        width={360}\n        position={valuePosition}\n        rotation={valueLayerRotation}\n        compositeOperation={'source-in'}\n      />\n    </Node>,\n  );\n\n  // Visible Loop\n  yield* all(\n    maskPosition(new Vector2(0, -30), 2),\n    valuePosition(new Vector2(0, -30), 2),\n  );\n  yield* maskLayerRotation(360, 2);\n  yield* valueLayerRotation(-360, 2);\n  yield* waitFor(1);\n  yield* all(\n    maskPosition(new Vector2(-150, -30), 2),\n    valuePosition(new Vector2(150, -30), 2),\n  );\n  yield* all(\n    fakeMaskLayerGroup().opacity(0, 1),\n    fakeValueLayerGroup().opacity(0, 1),\n  );\n\n  // Hidden Loop\n  yield* all(\n    maskPosition(new Vector2(0, -30), 2),\n    valuePosition(new Vector2(0, -30), 2),\n  );\n  yield* maskLayerRotation(2 * 360, 2);\n  yield* valueLayerRotation(2 * -360, 2);\n  yield* waitFor(1);\n  yield* all(\n    maskPosition(new Vector2(-150, -30), 2),\n    valuePosition(new Vector2(150, -30), 2),\n  );\n});\n",c="import {Img, Node, makeScene2D} from '@motion-canvas/2d';\nimport {createRef, linear} from '@motion-canvas/core';\n\n// Image by Marek Piwnicki (https://unsplash.com/photos/_4o-1pr2oqU)\nconst ImageSource =\n  'https://images.unsplash.com/photo-1685901088371-f498db7f8c46';\n\nexport default makeScene2D(function* (view) {\n  view.fill('#141414');\n\n  const maskRef = createRef<Img>();\n  const valueRef = createRef<Img>();\n\n  yield view.add(\n    <Node cache>\n      {/** Stencil / Mask Layer. It defines if the Value Layer is visible or not */}\n      <Img ref={maskRef} size={250} src=\"/img/logo_dark.svg\" />\n      {/** Value Layer. Anything from here will be visible if the Stencil Layer allows for it. */}\n      <Img\n        ref={valueRef}\n        x={100}\n        src={ImageSource}\n        width={600}\n        compositeOperation={'source-in'}\n      />\n    </Node>,\n  );\n\n  yield maskRef().rotation(360, 4, linear);\n  yield* valueRef().x(-100, 1.5).wait(0.5).to(100, 1.5).wait(0.5);\n});\n",d="import {Img, Node, makeScene2D} from '@motion-canvas/2d';\nimport {createRef, linear} from '@motion-canvas/core';\n\n// Image by Marek Piwnicki (https://unsplash.com/photos/_4o-1pr2oqU)\nconst ImageSource =\n  'https://images.unsplash.com/photo-1685901088371-f498db7f8c46';\n\nexport default makeScene2D(function* (view) {\n  view.fill('#141414');\n\n  const maskRef = createRef<Img>();\n  const valueRef = createRef<Img>();\n\n  yield view.add(\n    <Node cache>\n      {/** Stencil / Mask Layer. It defines if the Value Layer is visible or not */}\n      <Img ref={maskRef} size={250} src=\"/img/logo_dark.svg\" />\n      {/** Value Layer. Anything from here will be visible if the Stencil Layer allows for it. */}\n      <Img\n        ref={valueRef}\n        x={100}\n        src={ImageSource}\n        width={600}\n        compositeOperation={'source-out'}\n      />\n    </Node>,\n  );\n\n  yield maskRef().rotation(360, 4, linear);\n  yield* valueRef().x(-100, 1.5).wait(0.5).to(100, 1.5).wait(0.5);\n});\n",m="import {Img, Node, makeScene2D} from '@motion-canvas/2d';\nimport {createRef, linear} from '@motion-canvas/core';\n\n// Image by Marek Piwnicki (https://unsplash.com/photos/_4o-1pr2oqU)\nconst ImageSource =\n  'https://images.unsplash.com/photo-1685901088371-f498db7f8c46';\n\nexport default makeScene2D(function* (view) {\n  view.fill('#141414');\n\n  const maskRef = createRef<Img>();\n  const valueRef = createRef<Img>();\n\n  yield view.add(\n    <Node cache>\n      {/** Value Layer. Anything from here will be visible if the Stencil Layer allows for it. */}\n      <Img ref={valueRef} x={100} src={ImageSource} width={600} />\n      {/** Stencil / Mask Layer. It defines if the Value Layer is visible or not */}\n      <Img\n        ref={maskRef}\n        size={250}\n        src=\"/img/logo_dark.svg\"\n        compositeOperation={'destination-in'}\n      />\n      {/** !!! Notice how the roles got reversed in comparison to source-in\n       * compositeOperation is now on the Mask, and the Value Layer lies above the Mask Layer.\n       */}\n    </Node>,\n  );\n\n  yield maskRef().rotation(360, 4, linear);\n  yield* valueRef().x(-100, 1.5).wait(0.5).to(100, 1.5).wait(0.5);\n});\n",u="import {Img, Node, makeScene2D} from '@motion-canvas/2d';\nimport {createRef, linear} from '@motion-canvas/core';\n\n// Image by Marek Piwnicki (https://unsplash.com/photos/_4o-1pr2oqU)\nconst ImageSource =\n  'https://images.unsplash.com/photo-1685901088371-f498db7f8c46';\n\nexport default makeScene2D(function* (view) {\n  view.fill('#141414');\n\n  const maskRef = createRef<Img>();\n  const valueRef = createRef<Img>();\n\n  yield view.add(\n    <Node cache>\n      {/** Value Layer. Anything from here will be visible if the Stencil Layer allows for it. */}\n      <Img ref={valueRef} x={100} src={ImageSource} width={600} />\n      {/** Stencil / Mask Layer. It defines if the Value Layer is visible or not */}\n      <Img\n        ref={maskRef}\n        size={250}\n        src=\"/img/logo_dark.svg\"\n        compositeOperation={'destination-out'}\n      />\n      {/** !!! Notice how the roles got reversed in comparison to source-out\n       * compositeOperation is now on the Mask, and the Value Layer lies above the Mask Layer.\n       */}\n    </Node>,\n  );\n\n  yield maskRef().rotation(360, 4, linear);\n  yield* valueRef().x(-100, 1.5).wait(0.5).to(100, 1.5).wait(0.5);\n});\n",f="import {Circle, Img, Node, makeScene2D} from '@motion-canvas/2d';\nimport {createRef, easeInOutSine, linear} from '@motion-canvas/core';\n\nexport default makeScene2D(function* (view) {\n  view.fill('#141414');\n\n  const maskRef = createRef<Img>();\n  const valueRef = createRef<Circle>();\n\n  yield view.add(\n    <Node cache>\n      {/** Stencil / Mask Layer. It defines if the Value Layer is visible or not */}\n      <Img ref={maskRef} size={250} src=\"/img/logo_dark.svg\" />\n      {/** Value Layer. Anything from here will be visible if the Stencil Layer allows for it. */}\n      <Circle\n        ref={valueRef}\n        size={0}\n        fill={'white'}\n        compositeOperation={'xor'}\n      />\n    </Node>,\n  );\n\n  yield maskRef().rotation(360, 4, linear);\n  yield* valueRef()\n    .size(300, 1.5, easeInOutSine)\n    .wait(0.5)\n    .to(0, 1.5)\n    .wait(0.5);\n});\n",p="import {Circle, Img, Node, makeScene2D} from '@motion-canvas/2d';\nimport {createRef, easeInOutSine, linear} from '@motion-canvas/core';\n\n/*\n * This example shows you that you can also nest composite operations.\n * Here we use a source-in to mask out an Image and use the Result to XOR with\n * the MC Icon\n */\n\n// Image by Marek Piwnicki (https://unsplash.com/photos/_4o-1pr2oqU)\nconst ImageSource =\n  'https://images.unsplash.com/photo-1685901088371-f498db7f8c46';\n\nexport default makeScene2D(function* (view) {\n  view.fill('#141414');\n\n  const maskRef = createRef<Img>();\n  const valueRef = createRef<Circle>();\n  const imageRef = createRef<Img>();\n\n  yield view.add(\n    <Node cache>\n      {/** Stencil / Mask Layer. It defines if the Value Layer is visible or not */}\n      <Img ref={maskRef} size={250} src=\"/img/logo_dark.svg\" />\n      {/** Value Layer (which in itself is generated from a composite operation)  */}\n      <Node cache compositeOperation={'xor'}>\n        <Circle ref={valueRef} size={0} fill={'white'} />\n        <Img\n          ref={imageRef}\n          width={600}\n          rotation={180}\n          src={ImageSource}\n          compositeOperation={'source-in'}\n        />\n      </Node>\n    </Node>,\n  );\n\n  yield maskRef().rotation(360, 4, linear);\n  yield imageRef().rotation(-360 + 180, 4, linear);\n  yield* valueRef()\n    .size(300, 1.5, easeInOutSine)\n    .wait(0.5)\n    .to(0, 1.5)\n    .wait(0.5);\n});\n",h={sidebar_position:4,slug:"/filters-and-effects"},v="Filters and Effects",g={unversionedId:"advanced/filters-and-effects",id:"advanced/filters-and-effects",title:"Filters and Effects",description:"Because Motion Canvas is built on top of the Browser's 2D Rendering Context, we",source:"@site/docs/advanced/filters-and-effects.mdx",sourceDirName:"advanced",slug:"/filters-and-effects",permalink:"/docs/filters-and-effects",draft:!1,editUrl:"https://github.com/motion-canvas/motion-canvas/blob/main/packages/docs/docs/advanced/filters-and-effects.mdx",tags:[],version:"current",lastUpdatedBy:"Jacob",sidebarPosition:4,frontMatter:{sidebar_position:4,slug:"/filters-and-effects"},sidebar:"docs",previous:{title:"Random values",permalink:"/docs/random-values"},next:{title:"Shaders",permalink:"/docs/shaders"}},y={},k=[{value:"Filters",id:"filters",level:2},{value:"Masking and composite operations",id:"masking-and-composite-operations",level:2},{value:"Cached nodes",id:"cached-nodes",level:2}],w={toc:k},b="wrapper";function N(e){let{components:n,...t}=e;return(0,o.kt)(b,(0,a.Z)({},w,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"filters-and-effects"},"Filters and Effects"),(0,o.kt)("p",null,"Because Motion Canvas is built on top of the Browser's 2D Rendering Context, we\ncan make use of several canvas operations that are provided by the Browser."),(0,o.kt)("h2",{id:"filters"},"Filters"),(0,o.kt)("p",null,"Filters let you apply various effects to your nodes. You can find all available\nfilters on\n",(0,o.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/filter"},"MDN"),"."),(0,o.kt)(i.Z,{mode:"preview",mdxType:"Fiddle"},r),(0,o.kt)("p",null,"Every node has a ",(0,o.kt)("inlineCode",{parentName:"p"},"filters")," property containing an array of\n",(0,o.kt)("a",{parentName:"p",href:"/api/2d/partials#Functions"},"filters")," that will be applied to the node. You can\ndeclare this array yourself, or use the ",(0,o.kt)("inlineCode",{parentName:"p"},"filters")," property to configure\nindividual filters. Both ways are shown in the following example:"),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("p",{parentName:"admonition"},"Some filters, like ",(0,o.kt)("inlineCode",{parentName:"p"},"opacity")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"drop-shadow"),", have their own dedicated\nproperties directly on the ",(0,o.kt)("a",{parentName:"p",href:"/api/2d/components/Node#opacity"},(0,o.kt)("inlineCode",{parentName:"a"},"Node")),", class.")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx",metastring:"editor",editor:!0},"// snippet Filters Property\nimport {Img, makeScene2D} from '@motion-canvas/2d';\nimport {createRef} from '@motion-canvas/core';\n\nexport default makeScene2D(function* (view) {\n  view.fill('#141414');\n\n  const iconRef = createRef<Img>();\n  yield view.add(<Img src={'/img/logo_dark.svg'} size={200} ref={iconRef} />);\n  // Modification happens by accessing the `filters` property.\n  // Individual filters don't need to be initialized. If a filter you set doesn't\n  // exists, it will be automatically created and added to the list of filters.\n  // If you have multiple filters of the same type, this will only\n  // modify the first instance (you can use the array method for more control).\n  yield* iconRef().filters.blur(10, 1);\n  yield* iconRef().filters.blur(0, 1);\n});\n\n// snippet Filters Array\nimport {makeScene2D, Img, blur} from '@motion-canvas/2d';\nimport {createSignal} from '@motion-canvas/core';\n\nexport default makeScene2D(function* (view) {\n  view.fill('#141414');\n\n  const blurSignal = createSignal(0);\n  yield view.add(\n    <Img\n      src={'/img/logo_dark.svg'}\n      size={200}\n      /* Modification happens by changing the Filters inside the 'filters' array */\n      filters={[blur(blurSignal)]}\n    />,\n  );\n  yield* blurSignal(10, 1);\n  yield* blurSignal(0, 1);\n});\n")),(0,o.kt)("p",null,"Keep in mind that the order in which you apply the effects does matter, as can\nbe seen in the following example:"),(0,o.kt)(i.Z,{mode:"preview",ratio:"3",mdxType:"Fiddle"},l),(0,o.kt)("h2",{id:"masking-and-composite-operations"},"Masking and composite operations"),(0,o.kt)("p",null,"Composite operations define how the thing we draw (source) interacts with what\nis already on the canvas (destination). Among other things, it allows us to\ndefine complex masks. MDN has a\n",(0,o.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation#operations"},"great visualisation of all available composite operations"),"."),(0,o.kt)("p",null,'You can create a mask by treating one node as the "masking" / "stencil" layer,\nand another node as the "value" layer. The mask layer will define if the value\nlayer will be visible or not. The value layer will be what\'s actually visible in\nthe end.'),(0,o.kt)(i.Z,{mode:"preview",ratio:"3",mdxType:"Fiddle"},s),(0,o.kt)("p",null,"Any of the following composite operations can be used to create a mask:\n",(0,o.kt)("inlineCode",{parentName:"p"},"source-in"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"source-out"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"destination-in"),", and ",(0,o.kt)("inlineCode",{parentName:"p"},"destination-out"),". There is\nalso a ",(0,o.kt)("inlineCode",{parentName:"p"},"xor")," operation which can be helpful if you want two value layers that\nhide each other on overlap. Use the dropdown below to browse all examples."),(0,o.kt)(i.Z,{mdxType:"Fiddle"},"// snippet source-in\n"+c+"\n// snippet source-out\n"+d+"\n// snippet destination-in\n"+m+"\n// snippet destination-out\n"+u+"\n// snippet xor\n"+f+"\n//snippet xor and source-in\n"+p),(0,o.kt)("h2",{id:"cached-nodes"},"Cached nodes"),(0,o.kt)("p",null,"Both filters and composite operations require a cached\n",(0,o.kt)("a",{parentName:"p",href:"/api/2d/components/Node"},(0,o.kt)("inlineCode",{parentName:"a"},"Node")),". Filters can set it automatically, while\ncomposite operations require you to set it explicitly on an ancestor\n",(0,o.kt)("a",{parentName:"p",href:"/api/2d/components/Node"},(0,o.kt)("inlineCode",{parentName:"a"},"Node"))," (usually the parent node)."),(0,o.kt)("p",null,"A cached ",(0,o.kt)("a",{parentName:"p",href:"/api/2d/components/Node"},(0,o.kt)("inlineCode",{parentName:"a"},"Node"))," and its children are rendered on an\noffscreen canvas first, before getting added to the main scene.",(0,o.kt)("br",{parentName:"p"}),"\n",'For filters this is needed because they are applied to the entire canvas. By\ncreating a new canvas and moving the elements that should get affected by the\nfilters over, applying filters to the entire "new" canvas, and then moving back\nthe result, you effectively only apply the filters to the moved elements.'),(0,o.kt)("p",null,"To turn a ",(0,o.kt)("a",{parentName:"p",href:"/api/2d/components/Node"},(0,o.kt)("inlineCode",{parentName:"a"},"Node"))," into a cached node, simply pass the\n",(0,o.kt)("a",{parentName:"p",href:"/api/2d/components/NodeProps/#cache"},(0,o.kt)("inlineCode",{parentName:"a"},"cache"))," property"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"<Node cache>...</Node>\n// or\n<Node cache={true}>...</Node>\n")),(0,o.kt)("p",null,"All components inherit from ",(0,o.kt)("a",{parentName:"p",href:"/api/2d/components/Node"},(0,o.kt)("inlineCode",{parentName:"a"},"Node")),", so you can set\nthe cache on all of them."))}N.isMDXComponent=!0}}]);