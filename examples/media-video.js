import{R,D as u,$ as g,Q as T,_ as S,a0 as j,u as w,a1 as b,I as P,s as c,i as r,q as m,M as f,m as V,j as D,V as x,b as E,c as _}from"./makeScene2D-322534e0.js";import{c as C}from"./createRef-ad1ed90d.js";var n=globalThis&&globalThis.__decorate||function(p,e,t,s){var a=arguments.length,o=a<3?e:s===null?s=Object.getOwnPropertyDescriptor(e,t):s,d;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")o=Reflect.decorate(p,e,t,s);else for(var h=p.length-1;h>=0;h--)(d=p[h])&&(o=(a<3?d(o):a>3?d(e,t,o):d(e,t))||o);return a>3&&o&&Object.defineProperty(e,t,o),o};class i extends R{constructor({play:e,...t}){super(t),this.lastTime=-1,e&&this.play()}isPlaying(){return this.playing()}getCurrentTime(){return this.clampTime(this.time())}getDuration(){return this.video().duration}desiredSize(){const e=super.desiredSize();if(e.x===null&&e.y===null){const t=this.video();return{x:t.videoWidth,y:t.videoHeight}}return e}completion(){return this.clampTime(this.time())/this.video().duration}video(){const e=this.src(),t=`${this.key}/${e}`;let s=i.pool[t];return s||(s=document.createElement("video"),s.src=e,i.pool[t]=s),s.readyState<2&&u.collectPromise(new Promise(a=>{const o=()=>{a(),s.removeEventListener("canplay",o)};s.addEventListener("canplay",o)})),s}seekedVideo(){const e=this.video(),t=this.clampTime(this.time());return e.playbackRate=this.playbackRate(),e.paused||e.pause(),this.lastTime===t||this.setCurrentTime(t),e}fastSeekedVideo(){const e=this.video(),t=this.clampTime(this.time());if(e.playbackRate=this.playbackRate(),this.lastTime===t)return e;const s=this.playing()&&t<e.duration&&e.playbackRate>0;return s?e.paused&&u.collectPromise(e.play()):e.paused||e.pause(),Math.abs(e.currentTime-t)>.2?this.setCurrentTime(t):s||(e.currentTime=t),e}draw(e){this.drawShape(e);const t=this.alpha();if(t>0){const s=this.view().playbackState(),a=s===g.Playing||s===g.Presenting?this.fastSeekedVideo():this.seekedVideo(),o=T.fromSizeCentered(this.computedSize());e.save(),e.clip(this.getPath()),t<1&&(e.globalAlpha*=t),e.imageSmoothingEnabled=this.smoothing(),S(e,a,o),e.restore()}this.clip()&&e.clip(this.getPath()),this.drawChildren(e)}applyFlex(){super.applyFlex();const e=this.video();this.element.style.aspectRatio=(this.ratio()??e.videoWidth/e.videoHeight).toString()}setCurrentTime(e){const t=this.video();t.readyState<2||(t.currentTime=e,this.lastTime=e,t.seeking&&u.collectPromise(new Promise(s=>{const a=()=>{s(),t.removeEventListener("seeked",a)};t.addEventListener("seeked",a)})))}setPlaybackRate(e){let t;if(j(e)?(t=e(),w().warn({message:"Invalid value set as the playback rate",remarks:`<p>The <code>playbackRate</code> of a <code>Video</code> cannot be reactive.</p>
<p>Make sure to use a concrete value and not a function:</p>
<pre><code class="language-ts"><span class="hljs-comment">// wrong ✗</span>
video.<span class="hljs-title function_">playbackRate</span>(<span class="hljs-function">() =&gt;</span> <span class="hljs-number">7</span>);
<span class="hljs-comment">// correct ✓</span>
video.<span class="hljs-title function_">playbackRate</span>(<span class="hljs-number">7</span>);
</code></pre><p>If you&#39;re using a signal, extract its value before passing it to the property:</p>
<pre><code class="language-ts"><span class="hljs-comment">// wrong ✗</span>
video.<span class="hljs-title function_">playbackRate</span>(mySignal);
<span class="hljs-comment">// correct ✓</span>
video.<span class="hljs-title function_">playbackRate</span>(<span class="hljs-title function_">mySignal</span>());
</code></pre>`,inspect:this.key,stack:new Error().stack})):t=e,this.playbackRate.context.setter(t),this.playing())if(t===0)this.pause();else{const s=b().time,a=s(),o=this.time();this.time(()=>this.clampTime(o+(s()-a)*t))}}play(){const e=b().time,t=e(),s=this.time(),a=this.playbackRate();this.playing(!0),this.time(()=>this.clampTime(s+(e()-t)*a))}pause(){this.playing(!1),this.time.save(),this.video().pause()}seek(e){const t=this.playing();this.time(this.clampTime(e)),t?this.play():this.pause()}clampTime(e){const t=this.video().duration;return this.loop()&&(e%=t),P(0,t,e)}collectAsyncResources(){super.collectAsyncResources(),this.seekedVideo()}}i.pool={};n([c()],i.prototype,"src",void 0);n([r(1),c()],i.prototype,"alpha",void 0);n([r(!0),c()],i.prototype,"smoothing",void 0);n([r(!1),c()],i.prototype,"loop",void 0);n([r(1),c()],i.prototype,"playbackRate",void 0);n([r(0),c()],i.prototype,"time",void 0);n([r(!1),c()],i.prototype,"playing",void 0);n([m()],i.prototype,"completion",null);n([m()],i.prototype,"video",null);n([m()],i.prototype,"seekedVideo",null);n([m()],i.prototype,"fastSeekedVideo",null);let y;y??(y=new f("media-video",!1));y.loadData({version:0,shared:{background:"rgb(36,36,36)",range:[0,null],size:{x:1920,y:1080},audioOffset:0},preview:{fps:30,resolutionScale:1},rendering:{fps:60,resolutionScale:2,colorSpace:"srgb",fileType:"image/png",quality:1}});const z=y;let v;v??(v=new f("media-video",!1));v.loadData({version:1,timeEvents:[],seed:3374664546});const F=v,L="/examples/example-0a0a4e3f.mp4",l=V(function*(p){const e=C();p.add(D(i,{ref:e,src:L})),e().play(),yield*e().scale(1.25,2).to(1,2)});l.name="media-video";F.attach(l.meta);l.onReplaced??(l.onReplaced=new x(l.config));const M=E({scenes:[l]}),k=new f("settings","\0settings");k.loadData({});const O=_("media-video",{core:"3.12.1",two:"3.12.3",ui:"3.12.3",vitePlugin:"3.12.3"},[],M,z,k);export{O as default};
