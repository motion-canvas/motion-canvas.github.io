import{M as h,m as w,g as i,j as t,C as u,L as k,f as l,T as d,F as x,w as y,V as P,b as v,P as p}from"./makeScene2D.bd0c5a73.js";let o;o!=null||(o=new h("node-signal",!1,{version:0}));o.loadData({version:0});const f=o;let r;r!=null||(r=new h("node-signal",!1,{version:1,seed:1826074633}));r.loadData({version:1,seed:1826074633});const D=r,a=w(function*(m){const e=i(3),j=i(()=>Math.PI*e()*e()),n=100,c={fontWeight:700,fontSize:56,offsetY:-1,padding:20,cache:!0};m.add(t(x,{children:[t(u,{width:()=>e()*n*2,height:()=>e()*n*2,fill:"#e13238"}),t(k,{points:[l.zero,()=>l.right.scale(e()*n)],lineDash:[20,20],startArrow:!0,endArrow:!0,endOffset:8,lineWidth:8,stroke:"#242424"}),t(d,{text:()=>`r = ${e().toFixed(2)}`,x:()=>e()*n/2,fill:"#242424",...c}),t(d,{text:()=>`A = ${j().toFixed(2)}`,y:()=>e()*n,fill:"#e13238",...c})]})),yield*e(4,2).to(3,2),yield*y(1)});a.name="node-signal";a.meta=D;var g;(g=a.onReplaced)!=null||(a.onReplaced=new P(a.config));const s=v({scenes:[a]}),S=()=>s instanceof p?(s.meta=f,s.name="node-signal",s.logger.warn({message:"A project instance was exported instead of a project factory.",remarks:`<p>Use the <code>makeProject()</code> function instead:</p>
<pre><code class="language-ts"><span class="hljs-keyword">import</span> {makeProject} <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@motion-canvas/core&#x27;</span>;
<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-title function_">makeProject</span>({
  <span class="hljs-comment">// Configuration and scenes go here.</span>
});
</code></pre>
`,stack:s.creationStack}),s):new p("node-signal",f,s);export{S as default};
